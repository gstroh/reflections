When would you want to use a remote repository rather than keeping all your work local?
	If you don't have access to the local machine, you may want to add something remotely.  In addition, there may be multiple people working on the project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	You would want to pull manually because there may be multiple people changing the GitHub repository.  You would want to make sure of the commits to the remote before pulling it.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	A branch is only on your local machine and you use it to try a new idea.
	A clone is making a copy of a repository locally or from GitHub.
	A fork only occurs on GitHub.  A fork links back to the original repository, unlike with a clone.

What is the benefit of having a copy of the last known state of the remote stored locally?
	It's handy if I am going to work offline for awhile.  For example, I will be driving to Connecticut next week with my daughter and won't have internet while driving.  I have access to the state of the remote while on the trip and could perform tasks on the remote state I have stored locally.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Collaborating without Git or GitHub would be much harder.  It would be much harder to manually maintain previous versions of the files and merge different branches.  There would be no central repository (GitHub) and no ability to easily share the code with a team.  It would be difficult to view the chain of changes and diff those changes.  I don't think anything would be easier.  Other tools for sharing docs would not really work well for code sharing and development.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	It seems making changes directly in master is much easier.  And, I would think it would be manageable for a small project.  But, I could see where branches might be very useful for larger projects.  On a large project it may be useful to ensure change-control to the code is occuring as OK'd by the person or group ensuring changes are tested & correct.